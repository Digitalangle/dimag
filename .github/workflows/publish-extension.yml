name: Publish Extension

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'extension/package-lock.json'

      - name: Install dependencies
        run: |
          cd extension
          npm ci

      - name: Lint and compile
        run: |
          cd extension
          npm run lint
          npm run compile

      - name: Run tests
        run: |
          cd extension
          npm test
        continue-on-error: true

      - name: Update version
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd extension
          npm version ${{ inputs.version }} --no-git-tag-version

      - name: Package extension
        run: |
          cd extension
          npm install -g @vscode/vsce
          vsce package

      - name: Publish to VS Code Marketplace
        if: env.VSCE_PAT != ''
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          cd extension
          vsce publish -p $VSCE_PAT

      - name: Publish to Open VSX Registry
        if: env.OVSX_PAT != ''
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
        run: |
          cd extension
          npm install -g ovsx
          ovsx publish -p $OVSX_PAT

      - name: Upload extension to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: extension/dimag-*.vsix
          asset_name: dimag-${{ github.event.release.tag_name }}.vsix
          asset_content_type: application/octet-stream

      - name: Create GitHub Release (manual dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const version = '${{ inputs.version }}';

            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${version}`,
              name: `Dimag v${version}`,
              body: `## Dimag v${version}\n\nSelf-learning AI CTO Orchestrator\n\n### Installation\n\nDownload the .vsix file and install via:\n\`\`\`bash\ncode --install-extension dimag-${version}.vsix\n\`\`\`\n\n### What's New\n\nCheck the [CHANGELOG.md](CHANGELOG.md) for details.`,
              draft: false,
              prerelease: version.includes('beta') || version.includes('alpha')
            });

      - name: Notify on success
        if: success()
        run: |
          echo "✅ Extension published successfully!"
          echo "Version: ${{ inputs.version || github.event.release.tag_name }}"

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Extension publishing failed!"
          exit 1
